<!-- CONTENT -->
.container-header-toolbar.theme_default
    .breadcrumbs
        a(routerLink="/admin/inventary") Inventario
    .sub-header
        h2.title-section Inventario
        .spacer
        .items
            .spacer
            button.d-none.d-sm-block.btn_new_programming(mat-flat-button, color="primary", (click)="create()", [ngClass]="{ notif : notif_exists }") REGISTRAR

.request.container-fluid.theme_default(*ngIf="load_success && is_empty")
    .circle-empty
        custom-icon.gris(icono="programming", size="98px")
    .content-text
        h3 {{ 'SCHEDULE.not_found' | translate }}
        p {{ 'SCHEDULE.msj_new_schedule' | translate }}

.request.container-fluid.theme_default(*ngIf="load_success")
    .chart-wrapper
        div
            table(mat-table, matSort, [dataSource]="dataSource")
                ng-container(matColumnDef="item")
                    th(mat-header-cell, mat-sort-header, *matHeaderCellDef)  Nro.
                    td(mat-cell, *matCellDef="let element")  {{element.item}}
                ng-container(matColumnDef="code")
                    th(mat-header-cell, mat-sort-header, *matHeaderCellDef)  Código
                    td(mat-cell, *matCellDef="let element")  {{ element.code }}
                ng-container(matColumnDef="type")
                    th(mat-header-cell, mat-sort-header, *matHeaderCellDef)  Tipo
                    td(mat-cell, *matCellDef="let element")  {{ element.type }}
                ng-container(matColumnDef="clasification")
                    th(mat-header-cell, mat-sort-header, *matHeaderCellDef) Clasificación
                    td(mat-cell, *matCellDef="let element")  {{ element.clasification }}
                ng-container(matColumnDef="description")
                    th(mat-header-cell, mat-sort-header, *matHeaderCellDef)  Descripción
                    td(mat-cell, *matCellDef="let element")  {{ element.description }}
                ng-container(matColumnDef="mark")
                    th(mat-header-cell, mat-sort-header, *matHeaderCellDef) Marca
                    td(mat-cell, *matCellDef="let element")  {{ element.mark }}
                ng-container(matColumnDef="measure")
                    th(mat-header-cell, mat-sort-header, *matHeaderCellDef) Medida
                    td(mat-cell, *matCellDef="let element")  {{ element.measure }}
                ng-container(matColumnDef="state")
                    th(mat-header-cell, mat-sort-header, *matHeaderCellDef) Estado
                    td(mat-cell, *matCellDef="let element")  {{ element.state }}
                ng-container(matColumnDef="situation")
                    th(mat-header-cell, mat-sort-header, *matHeaderCellDef) Situación
                    td(mat-cell, *matCellDef="let element")  {{ element.situation }}
                ng-container(matColumnDef="store")
                    th(mat-header-cell, mat-sort-header, *matHeaderCellDef) Ubicación
                    td(mat-cell, *matCellDef="let element")  {{ element.store }}
                ng-container(matColumnDef="amount")
                    th(mat-header-cell, mat-sort-header, *matHeaderCellDef) Cantidad
                    td(mat-cell, *matCellDef="let element")  {{ element.amount }}
                ng-container(matColumnDef="unit")
                    th(mat-header-cell, mat-sort-header, *matHeaderCellDef) Unidad
                    td(mat-cell, *matCellDef="let element")  {{ element.unit }}
                ng-container(matColumnDef="qr_code")
                    th(mat-header-cell, mat-sort-header, *matHeaderCellDef) qr
                    td(mat-cell, *matCellDef="let element")
                        .container_qr
                            <img src="{{ element.qr_code }}" alt="QR Code" />
                ng-container(matColumnDef="edit")
                    th(mat-header-cell, mat-sort-header, *matHeaderCellDef)  Acciones
                    td(mat-cell, *matCellDef="let element")
                        button(mat-icon-button aria-label="Editar", (click)="edit(element)")
                            mat-icon edit
                        button(mat-icon-button aria-label="Eliminar", (click)="remove(element)")
                            mat-icon delete
                tr(mat-header-row, *matHeaderRowDef="displayedColumns")
                tr(mat-row, *matRowDef="let row; columns: displayedColumns;")
            mat-paginator([pageSizeOptions]="[5, 10, 20]", showFirstLastButtons)
