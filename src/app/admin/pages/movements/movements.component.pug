<!-- CONTENT -->
.container-header-toolbar.theme_default
    .breadcrumbs
        a(routerLink="/admin/movements") Movimientos
    .sub-header
        h2.title-section Movimientos
        .spacer
        .items
            .spacer
            button(mat-flat-button, color="primary", (click)="downloadPdf()") DESCARGAR
            button.d-none.d-sm-block.btn_new_programming(mat-flat-button, color="primary", (click)="create()") REGISTRAR

.request.container-fluid.theme_default(*ngIf="load_success")
    .chart-wrapper
        div
            table(id="movements", mat-table, matSort, [dataSource]="dataSource")
                ng-container(matColumnDef="id")
                    th(mat-header-cell, mat-sort-header, *matHeaderCellDef)  Nro.
                    td(mat-cell, *matCellDef="let element")  {{element.id_movement}}
                ng-container(matColumnDef="guide_code")
                    th(mat-header-cell, mat-sort-header, *matHeaderCellDef)  Guía de Remisión.
                    td(mat-cell, *matCellDef="let element")  {{element.guide_code}}
                ng-container(matColumnDef="type_movement")
                    th(mat-header-cell, mat-sort-header, *matHeaderCellDef)  Tipo de Movimiento
                    td(mat-cell, *matCellDef="let element")  {{ element.type_movement }}
                ng-container(matColumnDef="product")
                    th(mat-header-cell, mat-sort-header, *matHeaderCellDef)  Producto
                    td(mat-cell, *matCellDef="let element")  {{ element.product }}
                ng-container(matColumnDef="mark")
                    th(mat-header-cell, mat-sort-header, *matHeaderCellDef) Marca
                    td(mat-cell, *matCellDef="let element")  {{ element.mark }}
                ng-container(matColumnDef="measure")
                    th(mat-header-cell, mat-sort-header, *matHeaderCellDef) Medida
                    td(mat-cell, *matCellDef="let element")  {{ element.measure }}
                ng-container(matColumnDef="state")
                    th(mat-header-cell, mat-sort-header, *matHeaderCellDef) Estado
                    td(mat-cell, *matCellDef="let element")  {{ element.state }}
                ng-container(matColumnDef="situation")
                    th(mat-header-cell, mat-sort-header, *matHeaderCellDef) Situación
                    td(mat-cell, *matCellDef="let element")  {{ element.situation }}
                ng-container(matColumnDef="store")
                    th(mat-header-cell, mat-sort-header, *matHeaderCellDef) Ubicación
                    td(mat-cell, *matCellDef="let element")  {{ element.store }}
                ng-container(matColumnDef="amount")
                    th(mat-header-cell, mat-sort-header, *matHeaderCellDef) Cantidad
                    td(mat-cell, *matCellDef="let element")  {{ element.amount }}
                ng-container(matColumnDef="unit")
                    th(mat-header-cell, mat-sort-header, *matHeaderCellDef) Unidad
                    td(mat-cell, *matCellDef="let element")  {{ element.unit }}
                ng-container(matColumnDef="date")
                    th(mat-header-cell, mat-sort-header, *matHeaderCellDef) Fecha
                    td(mat-cell, *matCellDef="let element")  {{ element.date }}
                ng-container(matColumnDef="qr_code")
                    th(mat-header-cell, mat-sort-header, *matHeaderCellDef) qr
                    td(mat-cell, *matCellDef="let element")
                        .container_qr
                            <img src="{{ element.qr_code }}" alt="QR Code" />
                ng-container(matColumnDef="edit")
                    th(mat-header-cell, mat-sort-header, *matHeaderCellDef)  Acciones
                    td(mat-cell, *matCellDef="let element")
                        button(mat-icon-button aria-label="Editar", (click)="downloadPdf(element)")
                            mat-icon download
                        button(mat-icon-button aria-label="Eliminar", (click)="remove(element)")
                            mat-icon delete
                tr(mat-header-row, *matHeaderRowDef="displayedColumns")
                tr(mat-row, *matRowDef="let row; columns: displayedColumns;")
            mat-paginator([pageSizeOptions]="[5, 10, 20]", showFirstLastButtons)
